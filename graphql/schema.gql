# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
input AWSDateTimeNullableFilter {
  equals: AWSDateTime
  gt: AWSDateTime
  gte: AWSDateTime
  in: [AWSDateTime!]
  lt: AWSDateTime
  lte: AWSDateTime
  not: NestedAWSDateTimeNullableFilter
  notIn: [AWSDateTime!]
}

type Domain {
  _count: DomainCount
  id: Int!
  isActive: Boolean
  name: String
  users(
    cursor: UserWhereUniqueInput
    distinct: [UserScalarFieldEnum!]
    orderBy: [UserOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: UserWhereInput
  ): [User!]!
  uuid: String
}

type DomainCount {
  users: Int!
}

input DomainCreateInput {
  isActive: Boolean
  name: String
  users: UserCreateNestedManyWithoutDomainInput
  uuid: String
}

input DomainCreateNestedOneWithoutUsersInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutUsersInput
  create: DomainCreateWithoutUsersInput
}

input DomainCreateOrConnectWithoutUsersInput {
  create: DomainCreateWithoutUsersInput!
  where: DomainWhereUniqueInput!
}

input DomainCreateWithoutUsersInput {
  isActive: Boolean
  name: String
  uuid: String
}

input DomainOrderByWithRelationInput {
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  users: UserOrderByRelationAggregateInput
  uuid: SortOrder
}

input DomainRelationFilter {
  is: DomainWhereInput
  isNot: DomainWhereInput
}

enum DomainScalarFieldEnum {
  id
  isActive
  name
  uuid
}

input DomainUpdateOneRequiredWithoutUsersInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutUsersInput
  create: DomainCreateWithoutUsersInput
  update: DomainUpdateWithoutUsersInput
  upsert: DomainUpsertWithoutUsersInput
}

input DomainUpdateWithoutUsersInput {
  isActive: NullableBoolFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  uuid: NullableStringFieldUpdateOperationsInput
}

input DomainUpsertWithoutUsersInput {
  create: DomainCreateWithoutUsersInput!
  update: DomainUpdateWithoutUsersInput!
}

input DomainWhereInput {
  AND: [DomainWhereInput!]
  NOT: [DomainWhereInput!]
  OR: [DomainWhereInput!]
  id: IntFilter
  isActive: BoolNullableFilter
  name: StringNullableFilter
  users: UserListRelationFilter
  uuid: StringNullableFilter
}

input DomainWhereUniqueInput {
  id: Int
  name: String
  uuid: String
}

input EnumGroupTypeFieldUpdateOperationsInput {
  set: GroupType
}

input EnumGroupTypeFilter {
  equals: GroupType
  in: [GroupType!]
  not: NestedEnumGroupTypeFilter
  notIn: [GroupType!]
}

input EnumUserOnlineStatusNullableFilter {
  equals: UserOnlineStatus
  in: [UserOnlineStatus!]
  not: NestedEnumUserOnlineStatusNullableFilter
  notIn: [UserOnlineStatus!]
}

enum GroupType {
  MULTIPLE
  SINGLE
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `AWSJSON` scalar type represents AWSJSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
input JsonNullableFilter {
  equals: AWSJSON
  not: AWSJSON
}

type Message {
  _count: MessageCount
  body: String!
  createdDate: AWSDateTime
  createrId: Int
  id: Int!
  isActive: Boolean
  isCreated: Boolean
  messageAttachments(
    cursor: MessageAttachmentWhereUniqueInput
    distinct: [MessageAttachmentScalarFieldEnum!]
    orderBy: [MessageAttachmentOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageAttachmentWhereInput
  ): [MessageAttachment!]!
  messageRecipients(
    cursor: MessageRecipientWhereUniqueInput
    distinct: [MessageRecipientScalarFieldEnum!]
    orderBy: [MessageRecipientOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageRecipientWhereInput
  ): [MessageRecipient!]!
  room: Room
  roomId: Int
  updatedDate: AWSDateTime
  user: User
}

type MessageAttachment {
  createdDate: AWSDateTime
  id: Int!
  isActive: Boolean
  messageId: Int
  metaData: AWSJSON
  updatedDate: AWSDateTime
}

input MessageAttachmentCreateManyMessageInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  metaData: AWSJSON
  updatedDate: AWSDateTime
}

input MessageAttachmentCreateManyMessageInputEnvelope {
  data: [MessageAttachmentCreateManyMessageInput!]!
  skipDuplicates: Boolean
}

input MessageAttachmentCreateNestedManyWithoutMessageInput {
  connect: [MessageAttachmentWhereUniqueInput!]
  connectOrCreate: [MessageAttachmentCreateOrConnectWithoutMessageInput!]
  create: [MessageAttachmentCreateWithoutMessageInput!]
  createMany: MessageAttachmentCreateManyMessageInputEnvelope
}

input MessageAttachmentCreateOrConnectWithoutMessageInput {
  create: MessageAttachmentCreateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentCreateWithoutMessageInput {
  createdDate: AWSDateTime
  isActive: Boolean
  metaData: AWSJSON
  updatedDate: AWSDateTime
}

input MessageAttachmentListRelationFilter {
  every: MessageAttachmentWhereInput
  none: MessageAttachmentWhereInput
  some: MessageAttachmentWhereInput
}

input MessageAttachmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageAttachmentOrderByWithRelationInput {
  createdDate: SortOrder
  id: SortOrder
  isActive: SortOrder
  message: MessageOrderByWithRelationInput
  messageId: SortOrder
  metaData: SortOrder
  updatedDate: SortOrder
}

enum MessageAttachmentScalarFieldEnum {
  createdDate
  id
  isActive
  messageId
  metaData
  updatedDate
}

input MessageAttachmentScalarWhereInput {
  AND: [MessageAttachmentScalarWhereInput!]
  NOT: [MessageAttachmentScalarWhereInput!]
  OR: [MessageAttachmentScalarWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  messageId: IntNullableFilter
  metaData: JsonNullableFilter
  updatedDate: AWSDateTimeNullableFilter
}

input MessageAttachmentUpdateManyMutationInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  metaData: AWSJSON
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageAttachmentUpdateManyWithWhereWithoutMessageInput {
  data: MessageAttachmentUpdateManyMutationInput!
  where: MessageAttachmentScalarWhereInput!
}

input MessageAttachmentUpdateManyWithoutMessageInput {
  connect: [MessageAttachmentWhereUniqueInput!]
  connectOrCreate: [MessageAttachmentCreateOrConnectWithoutMessageInput!]
  create: [MessageAttachmentCreateWithoutMessageInput!]
  createMany: MessageAttachmentCreateManyMessageInputEnvelope
  delete: [MessageAttachmentWhereUniqueInput!]
  deleteMany: [MessageAttachmentScalarWhereInput!]
  disconnect: [MessageAttachmentWhereUniqueInput!]
  set: [MessageAttachmentWhereUniqueInput!]
  update: [MessageAttachmentUpdateWithWhereUniqueWithoutMessageInput!]
  updateMany: [MessageAttachmentUpdateManyWithWhereWithoutMessageInput!]
  upsert: [MessageAttachmentUpsertWithWhereUniqueWithoutMessageInput!]
}

input MessageAttachmentUpdateWithWhereUniqueWithoutMessageInput {
  data: MessageAttachmentUpdateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentUpdateWithoutMessageInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  metaData: AWSJSON
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageAttachmentUpsertWithWhereUniqueWithoutMessageInput {
  create: MessageAttachmentCreateWithoutMessageInput!
  update: MessageAttachmentUpdateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentWhereInput {
  AND: [MessageAttachmentWhereInput!]
  NOT: [MessageAttachmentWhereInput!]
  OR: [MessageAttachmentWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  message: MessageRelationFilter
  messageId: IntNullableFilter
  metaData: JsonNullableFilter
  updatedDate: AWSDateTimeNullableFilter
}

input MessageAttachmentWhereUniqueInput {
  id: Int
}

type MessageCount {
  messageAttachments: Int!
  messageRecipients: Int!
}

input MessageCreateInput {
  body: String!
  createdDate: AWSDateTime
  isActive: Boolean
  isCreated: Boolean
  messageAttachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  messageRecipients: MessageRecipientCreateNestedManyWithoutMessageInput
  room: RoomCreateNestedOneWithoutMessagesInput
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutMessagesInput
}

input MessageCreateManyRoomInput {
  body: String!
  createdDate: AWSDateTime
  createrId: Int
  id: Int
  isActive: Boolean
  isCreated: Boolean
  updatedDate: AWSDateTime
}

input MessageCreateManyRoomInputEnvelope {
  data: [MessageCreateManyRoomInput!]!
  skipDuplicates: Boolean
}

input MessageCreateManyUserInput {
  body: String!
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  isCreated: Boolean
  roomId: Int
  updatedDate: AWSDateTime
}

input MessageCreateManyUserInputEnvelope {
  data: [MessageCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutRoomInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutRoomInput!]
  create: [MessageCreateWithoutRoomInput!]
  createMany: MessageCreateManyRoomInputEnvelope
}

input MessageCreateNestedManyWithoutUserInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutUserInput!]
  create: [MessageCreateWithoutUserInput!]
  createMany: MessageCreateManyUserInputEnvelope
}

input MessageCreateNestedOneWithoutMessageRecipientsInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutMessageRecipientsInput
  create: MessageCreateWithoutMessageRecipientsInput
}

input MessageCreateOrConnectWithoutMessageRecipientsInput {
  create: MessageCreateWithoutMessageRecipientsInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutRoomInput {
  create: MessageCreateWithoutRoomInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutUserInput {
  create: MessageCreateWithoutUserInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutMessageRecipientsInput {
  body: String!
  createdDate: AWSDateTime
  isActive: Boolean
  isCreated: Boolean
  messageAttachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  room: RoomCreateNestedOneWithoutMessagesInput
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutMessagesInput
}

input MessageCreateWithoutRoomInput {
  body: String!
  createdDate: AWSDateTime
  isActive: Boolean
  isCreated: Boolean
  messageAttachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  messageRecipients: MessageRecipientCreateNestedManyWithoutMessageInput
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutMessagesInput
}

input MessageCreateWithoutUserInput {
  body: String!
  createdDate: AWSDateTime
  isActive: Boolean
  isCreated: Boolean
  messageAttachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  messageRecipients: MessageRecipientCreateNestedManyWithoutMessageInput
  room: RoomCreateNestedOneWithoutMessagesInput
  updatedDate: AWSDateTime
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithRelationInput {
  body: SortOrder
  createdDate: SortOrder
  createrId: SortOrder
  id: SortOrder
  isActive: SortOrder
  isCreated: SortOrder
  messageAttachments: MessageAttachmentOrderByRelationAggregateInput
  messageRecipients: MessageRecipientOrderByRelationAggregateInput
  room: RoomOrderByWithRelationInput
  roomId: SortOrder
  updatedDate: SortOrder
  user: UserOrderByWithRelationInput
}

type MessageRecipient {
  createdDate: AWSDateTime
  id: Int!
  isActive: Boolean
  isRead: Boolean
  message: Message
  messageId: Int
  roomParticipant: RoomParticipant!
  roomParticipantId: Int!
  updatedDate: AWSDateTime
}

input MessageRecipientCreateManyMessageInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  isRead: Boolean
  roomParticipantId: Int!
  updatedDate: AWSDateTime
}

input MessageRecipientCreateManyMessageInputEnvelope {
  data: [MessageRecipientCreateManyMessageInput!]!
  skipDuplicates: Boolean
}

input MessageRecipientCreateManyRoomParticipantInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  isRead: Boolean
  messageId: Int
  updatedDate: AWSDateTime
}

input MessageRecipientCreateManyRoomParticipantInputEnvelope {
  data: [MessageRecipientCreateManyRoomParticipantInput!]!
  skipDuplicates: Boolean
}

input MessageRecipientCreateNestedManyWithoutMessageInput {
  connect: [MessageRecipientWhereUniqueInput!]
  connectOrCreate: [MessageRecipientCreateOrConnectWithoutMessageInput!]
  create: [MessageRecipientCreateWithoutMessageInput!]
  createMany: MessageRecipientCreateManyMessageInputEnvelope
}

input MessageRecipientCreateNestedManyWithoutRoomParticipantInput {
  connect: [MessageRecipientWhereUniqueInput!]
  connectOrCreate: [MessageRecipientCreateOrConnectWithoutRoomParticipantInput!]
  create: [MessageRecipientCreateWithoutRoomParticipantInput!]
  createMany: MessageRecipientCreateManyRoomParticipantInputEnvelope
}

input MessageRecipientCreateOrConnectWithoutMessageInput {
  create: MessageRecipientCreateWithoutMessageInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientCreateOrConnectWithoutRoomParticipantInput {
  create: MessageRecipientCreateWithoutRoomParticipantInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientCreateWithoutMessageInput {
  createdDate: AWSDateTime
  isActive: Boolean
  isRead: Boolean
  roomParticipant: RoomParticipantCreateNestedOneWithoutMessageRecipientsInput!
  updatedDate: AWSDateTime
}

input MessageRecipientCreateWithoutRoomParticipantInput {
  createdDate: AWSDateTime
  isActive: Boolean
  isRead: Boolean
  message: MessageCreateNestedOneWithoutMessageRecipientsInput
  updatedDate: AWSDateTime
}

input MessageRecipientListRelationFilter {
  every: MessageRecipientWhereInput
  none: MessageRecipientWhereInput
  some: MessageRecipientWhereInput
}

input MessageRecipientOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageRecipientOrderByWithRelationInput {
  createdDate: SortOrder
  id: SortOrder
  isActive: SortOrder
  isRead: SortOrder
  message: MessageOrderByWithRelationInput
  messageId: SortOrder
  roomParticipant: RoomParticipantOrderByWithRelationInput
  roomParticipantId: SortOrder
  updatedDate: SortOrder
}

enum MessageRecipientScalarFieldEnum {
  createdDate
  id
  isActive
  isRead
  messageId
  roomParticipantId
  updatedDate
}

input MessageRecipientScalarWhereInput {
  AND: [MessageRecipientScalarWhereInput!]
  NOT: [MessageRecipientScalarWhereInput!]
  OR: [MessageRecipientScalarWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  isRead: BoolNullableFilter
  messageId: IntNullableFilter
  roomParticipantId: IntFilter
  updatedDate: AWSDateTimeNullableFilter
}

input MessageRecipientUpdateManyMutationInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isRead: NullableBoolFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageRecipientUpdateManyWithWhereWithoutMessageInput {
  data: MessageRecipientUpdateManyMutationInput!
  where: MessageRecipientScalarWhereInput!
}

input MessageRecipientUpdateManyWithWhereWithoutRoomParticipantInput {
  data: MessageRecipientUpdateManyMutationInput!
  where: MessageRecipientScalarWhereInput!
}

input MessageRecipientUpdateManyWithoutMessageInput {
  connect: [MessageRecipientWhereUniqueInput!]
  connectOrCreate: [MessageRecipientCreateOrConnectWithoutMessageInput!]
  create: [MessageRecipientCreateWithoutMessageInput!]
  createMany: MessageRecipientCreateManyMessageInputEnvelope
  delete: [MessageRecipientWhereUniqueInput!]
  deleteMany: [MessageRecipientScalarWhereInput!]
  disconnect: [MessageRecipientWhereUniqueInput!]
  set: [MessageRecipientWhereUniqueInput!]
  update: [MessageRecipientUpdateWithWhereUniqueWithoutMessageInput!]
  updateMany: [MessageRecipientUpdateManyWithWhereWithoutMessageInput!]
  upsert: [MessageRecipientUpsertWithWhereUniqueWithoutMessageInput!]
}

input MessageRecipientUpdateManyWithoutRoomParticipantInput {
  connect: [MessageRecipientWhereUniqueInput!]
  connectOrCreate: [MessageRecipientCreateOrConnectWithoutRoomParticipantInput!]
  create: [MessageRecipientCreateWithoutRoomParticipantInput!]
  createMany: MessageRecipientCreateManyRoomParticipantInputEnvelope
  delete: [MessageRecipientWhereUniqueInput!]
  deleteMany: [MessageRecipientScalarWhereInput!]
  disconnect: [MessageRecipientWhereUniqueInput!]
  set: [MessageRecipientWhereUniqueInput!]
  update: [MessageRecipientUpdateWithWhereUniqueWithoutRoomParticipantInput!]
  updateMany: [MessageRecipientUpdateManyWithWhereWithoutRoomParticipantInput!]
  upsert: [MessageRecipientUpsertWithWhereUniqueWithoutRoomParticipantInput!]
}

input MessageRecipientUpdateWithWhereUniqueWithoutMessageInput {
  data: MessageRecipientUpdateWithoutMessageInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientUpdateWithWhereUniqueWithoutRoomParticipantInput {
  data: MessageRecipientUpdateWithoutRoomParticipantInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientUpdateWithoutMessageInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isRead: NullableBoolFieldUpdateOperationsInput
  roomParticipant: RoomParticipantUpdateOneRequiredWithoutMessageRecipientsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageRecipientUpdateWithoutRoomParticipantInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isRead: NullableBoolFieldUpdateOperationsInput
  message: MessageUpdateOneWithoutMessageRecipientsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageRecipientUpsertWithWhereUniqueWithoutMessageInput {
  create: MessageRecipientCreateWithoutMessageInput!
  update: MessageRecipientUpdateWithoutMessageInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientUpsertWithWhereUniqueWithoutRoomParticipantInput {
  create: MessageRecipientCreateWithoutRoomParticipantInput!
  update: MessageRecipientUpdateWithoutRoomParticipantInput!
  where: MessageRecipientWhereUniqueInput!
}

input MessageRecipientWhereInput {
  AND: [MessageRecipientWhereInput!]
  NOT: [MessageRecipientWhereInput!]
  OR: [MessageRecipientWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  isRead: BoolNullableFilter
  message: MessageRelationFilter
  messageId: IntNullableFilter
  roomParticipant: RoomParticipantRelationFilter
  roomParticipantId: IntFilter
  updatedDate: AWSDateTimeNullableFilter
}

input MessageRecipientWhereUniqueInput {
  id: Int
}

input MessageRelationFilter {
  is: MessageWhereInput
  isNot: MessageWhereInput
}

enum MessageScalarFieldEnum {
  body
  createdDate
  createrId
  id
  isActive
  isCreated
  roomId
  updatedDate
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  body: StringFilter
  createdDate: AWSDateTimeNullableFilter
  createrId: IntNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  isCreated: BoolNullableFilter
  roomId: IntNullableFilter
  updatedDate: AWSDateTimeNullableFilter
}

type MessageTyping {
  body: String
  event: String
  id: Int
  roomId: Int
  userId: Int
  userName: String
}

input MessageTypingInput {
  body: String
  event: String
  id: Int
  roomId: Int
  userId: Int
  userName: String
}

input MessageUpdateManyMutationInput {
  body: StringFieldUpdateOperationsInput
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isCreated: NullableBoolFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutRoomInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutUserInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutRoomInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutRoomInput!]
  create: [MessageCreateWithoutRoomInput!]
  createMany: MessageCreateManyRoomInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutRoomInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutRoomInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutRoomInput!]
}

input MessageUpdateManyWithoutUserInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutUserInput!]
  create: [MessageCreateWithoutUserInput!]
  createMany: MessageCreateManyUserInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutUserInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutUserInput!]
}

input MessageUpdateOneWithoutMessageRecipientsInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutMessageRecipientsInput
  create: MessageCreateWithoutMessageRecipientsInput
  delete: Boolean
  disconnect: Boolean
  update: MessageUpdateWithoutMessageRecipientsInput
  upsert: MessageUpsertWithoutMessageRecipientsInput
}

input MessageUpdateWithWhereUniqueWithoutRoomInput {
  data: MessageUpdateWithoutRoomInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutUserInput {
  data: MessageUpdateWithoutUserInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutMessageRecipientsInput {
  body: StringFieldUpdateOperationsInput
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isCreated: NullableBoolFieldUpdateOperationsInput
  messageAttachments: MessageAttachmentUpdateManyWithoutMessageInput
  room: RoomUpdateOneWithoutMessagesInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutMessagesInput
}

input MessageUpdateWithoutRoomInput {
  body: StringFieldUpdateOperationsInput
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isCreated: NullableBoolFieldUpdateOperationsInput
  messageAttachments: MessageAttachmentUpdateManyWithoutMessageInput
  messageRecipients: MessageRecipientUpdateManyWithoutMessageInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutMessagesInput
}

input MessageUpdateWithoutUserInput {
  body: StringFieldUpdateOperationsInput
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isCreated: NullableBoolFieldUpdateOperationsInput
  messageAttachments: MessageAttachmentUpdateManyWithoutMessageInput
  messageRecipients: MessageRecipientUpdateManyWithoutMessageInput
  room: RoomUpdateOneWithoutMessagesInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input MessageUpsertWithWhereUniqueWithoutRoomInput {
  create: MessageCreateWithoutRoomInput!
  update: MessageUpdateWithoutRoomInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutUserInput {
  create: MessageCreateWithoutUserInput!
  update: MessageUpdateWithoutUserInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithoutMessageRecipientsInput {
  create: MessageCreateWithoutMessageRecipientsInput!
  update: MessageUpdateWithoutMessageRecipientsInput!
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  body: StringFilter
  createdDate: AWSDateTimeNullableFilter
  createrId: IntNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  isCreated: BoolNullableFilter
  messageAttachments: MessageAttachmentListRelationFilter
  messageRecipients: MessageRecipientListRelationFilter
  room: RoomRelationFilter
  roomId: IntNullableFilter
  updatedDate: AWSDateTimeNullableFilter
  user: UserRelationFilter
}

input MessageWhereUniqueInput {
  id: Int
}

type Mutation {
  createDomain(data: DomainCreateInput!): Domain!
  createManyUser(
    data: [UserCreateManyInput!]!
    skipDuplicates: Boolean
  ): AffectedRowsOutput!
  createMessage(data: MessageCreateInput!): Message!
  createRoom(data: RoomCreateInput!): Room!
  createUser(data: UserCreateInput!): User!
  messageTyping(data: MessageTypingInput): MessageTyping
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedAWSDateTimeNullableFilter {
  equals: AWSDateTime
  gt: AWSDateTime
  gte: AWSDateTime
  in: [AWSDateTime!]
  lt: AWSDateTime
  lte: AWSDateTime
  not: NestedAWSDateTimeNullableFilter
  notIn: [AWSDateTime!]
}

input NestedEnumGroupTypeFilter {
  equals: GroupType
  in: [GroupType!]
  not: NestedEnumGroupTypeFilter
  notIn: [GroupType!]
}

input NestedEnumUserOnlineStatusNullableFilter {
  equals: UserOnlineStatus
  in: [UserOnlineStatus!]
  not: NestedEnumUserOnlineStatusNullableFilter
  notIn: [UserOnlineStatus!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableAWSDateTimeFieldUpdateOperationsInput {
  set: AWSDateTime
}

input NullableEnumUserOnlineStatusFieldUpdateOperationsInput {
  set: UserOnlineStatus
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  findFirstDomain(
    cursor: DomainWhereUniqueInput
    distinct: [DomainScalarFieldEnum!]
    orderBy: [DomainOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: DomainWhereInput
  ): Domain
  findFirstUser(
    cursor: UserWhereUniqueInput
    distinct: [UserScalarFieldEnum!]
    orderBy: [UserOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: UserWhereInput
  ): User
  messages(
    cursor: MessageWhereUniqueInput
    distinct: [MessageScalarFieldEnum!]
    orderBy: [MessageOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageWhereInput
  ): [Message!]!
  roomParticipants(
    cursor: RoomParticipantWhereUniqueInput
    distinct: [RoomParticipantScalarFieldEnum!]
    orderBy: [RoomParticipantOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: RoomParticipantWhereInput
  ): [RoomParticipant!]!
  rooms(
    cursor: RoomWhereUniqueInput
    distinct: [RoomScalarFieldEnum!]
    orderBy: [RoomOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: RoomWhereInput
  ): [Room!]!
}

enum QueryMode {
  default
  insensitive
}

type Room {
  _count: RoomCount
  createdDate: AWSDateTime
  id: Int!
  isActive: Boolean
  lastActivityDate: AWSDateTime
  messages(
    cursor: MessageWhereUniqueInput
    distinct: [MessageScalarFieldEnum!]
    orderBy: [MessageOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageWhereInput
  ): [Message!]!
  name: String
  roomParticipants(
    cursor: RoomParticipantWhereUniqueInput
    distinct: [RoomParticipantScalarFieldEnum!]
    orderBy: [RoomParticipantOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: RoomParticipantWhereInput
  ): [RoomParticipant!]!
  type: GroupType!
  updatedDate: AWSDateTime
  user: User!
  userId: Int!
}

type RoomCount {
  messages: Int!
  roomParticipants: Int!
}

input RoomCreateInput {
  createdDate: AWSDateTime
  isActive: Boolean
  lastActivityDate: AWSDateTime
  messages: MessageCreateNestedManyWithoutRoomInput
  name: String
  roomParticipants: RoomParticipantCreateNestedManyWithoutRoomInput
  type: GroupType
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutRoomsInput!
}

input RoomCreateManyUserInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  lastActivityDate: AWSDateTime
  name: String
  type: GroupType
  updatedDate: AWSDateTime
}

input RoomCreateManyUserInputEnvelope {
  data: [RoomCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input RoomCreateNestedManyWithoutUserInput {
  connect: [RoomWhereUniqueInput!]
  connectOrCreate: [RoomCreateOrConnectWithoutUserInput!]
  create: [RoomCreateWithoutUserInput!]
  createMany: RoomCreateManyUserInputEnvelope
}

input RoomCreateNestedOneWithoutMessagesInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutMessagesInput
  create: RoomCreateWithoutMessagesInput
}

input RoomCreateNestedOneWithoutRoomParticipantsInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutRoomParticipantsInput
  create: RoomCreateWithoutRoomParticipantsInput
}

input RoomCreateOrConnectWithoutMessagesInput {
  create: RoomCreateWithoutMessagesInput!
  where: RoomWhereUniqueInput!
}

input RoomCreateOrConnectWithoutRoomParticipantsInput {
  create: RoomCreateWithoutRoomParticipantsInput!
  where: RoomWhereUniqueInput!
}

input RoomCreateOrConnectWithoutUserInput {
  create: RoomCreateWithoutUserInput!
  where: RoomWhereUniqueInput!
}

input RoomCreateWithoutMessagesInput {
  createdDate: AWSDateTime
  isActive: Boolean
  lastActivityDate: AWSDateTime
  name: String
  roomParticipants: RoomParticipantCreateNestedManyWithoutRoomInput
  type: GroupType
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutRoomsInput!
}

input RoomCreateWithoutRoomParticipantsInput {
  createdDate: AWSDateTime
  isActive: Boolean
  lastActivityDate: AWSDateTime
  messages: MessageCreateNestedManyWithoutRoomInput
  name: String
  type: GroupType
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutRoomsInput!
}

input RoomCreateWithoutUserInput {
  createdDate: AWSDateTime
  isActive: Boolean
  lastActivityDate: AWSDateTime
  messages: MessageCreateNestedManyWithoutRoomInput
  name: String
  roomParticipants: RoomParticipantCreateNestedManyWithoutRoomInput
  type: GroupType
  updatedDate: AWSDateTime
}

input RoomListRelationFilter {
  every: RoomWhereInput
  none: RoomWhereInput
  some: RoomWhereInput
}

input RoomOrderByRelationAggregateInput {
  _count: SortOrder
}

input RoomOrderByWithRelationInput {
  createdDate: SortOrder
  id: SortOrder
  isActive: SortOrder
  lastActivityDate: SortOrder
  messages: MessageOrderByRelationAggregateInput
  name: SortOrder
  roomParticipants: RoomParticipantOrderByRelationAggregateInput
  type: SortOrder
  updatedDate: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

type RoomParticipant {
  _count: RoomParticipantCount
  createdDate: AWSDateTime
  id: Int!
  isActive: Boolean
  messageRecipients(
    cursor: MessageRecipientWhereUniqueInput
    distinct: [MessageRecipientScalarFieldEnum!]
    orderBy: [MessageRecipientOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageRecipientWhereInput
  ): [MessageRecipient!]!
  participantId: Int!
  room: Room!
  roomId: Int!
  updatedDate: AWSDateTime
  user: User!
}

type RoomParticipantCount {
  messageRecipients: Int!
}

input RoomParticipantCreateManyRoomInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  participantId: Int!
  updatedDate: AWSDateTime
}

input RoomParticipantCreateManyRoomInputEnvelope {
  data: [RoomParticipantCreateManyRoomInput!]!
  skipDuplicates: Boolean
}

input RoomParticipantCreateManyUserInput {
  createdDate: AWSDateTime
  id: Int
  isActive: Boolean
  roomId: Int!
  updatedDate: AWSDateTime
}

input RoomParticipantCreateManyUserInputEnvelope {
  data: [RoomParticipantCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input RoomParticipantCreateNestedManyWithoutRoomInput {
  connect: [RoomParticipantWhereUniqueInput!]
  connectOrCreate: [RoomParticipantCreateOrConnectWithoutRoomInput!]
  create: [RoomParticipantCreateWithoutRoomInput!]
  createMany: RoomParticipantCreateManyRoomInputEnvelope
}

input RoomParticipantCreateNestedManyWithoutUserInput {
  connect: [RoomParticipantWhereUniqueInput!]
  connectOrCreate: [RoomParticipantCreateOrConnectWithoutUserInput!]
  create: [RoomParticipantCreateWithoutUserInput!]
  createMany: RoomParticipantCreateManyUserInputEnvelope
}

input RoomParticipantCreateNestedOneWithoutMessageRecipientsInput {
  connect: RoomParticipantWhereUniqueInput
  connectOrCreate: RoomParticipantCreateOrConnectWithoutMessageRecipientsInput
  create: RoomParticipantCreateWithoutMessageRecipientsInput
}

input RoomParticipantCreateOrConnectWithoutMessageRecipientsInput {
  create: RoomParticipantCreateWithoutMessageRecipientsInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantCreateOrConnectWithoutRoomInput {
  create: RoomParticipantCreateWithoutRoomInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantCreateOrConnectWithoutUserInput {
  create: RoomParticipantCreateWithoutUserInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantCreateWithoutMessageRecipientsInput {
  createdDate: AWSDateTime
  isActive: Boolean
  room: RoomCreateNestedOneWithoutRoomParticipantsInput!
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutRoomParticipantsInput!
}

input RoomParticipantCreateWithoutRoomInput {
  createdDate: AWSDateTime
  isActive: Boolean
  messageRecipients: MessageRecipientCreateNestedManyWithoutRoomParticipantInput
  updatedDate: AWSDateTime
  user: UserCreateNestedOneWithoutRoomParticipantsInput!
}

input RoomParticipantCreateWithoutUserInput {
  createdDate: AWSDateTime
  isActive: Boolean
  messageRecipients: MessageRecipientCreateNestedManyWithoutRoomParticipantInput
  room: RoomCreateNestedOneWithoutRoomParticipantsInput!
  updatedDate: AWSDateTime
}

input RoomParticipantListRelationFilter {
  every: RoomParticipantWhereInput
  none: RoomParticipantWhereInput
  some: RoomParticipantWhereInput
}

input RoomParticipantOrderByRelationAggregateInput {
  _count: SortOrder
}

input RoomParticipantOrderByWithRelationInput {
  createdDate: SortOrder
  id: SortOrder
  isActive: SortOrder
  messageRecipients: MessageRecipientOrderByRelationAggregateInput
  participantId: SortOrder
  room: RoomOrderByWithRelationInput
  roomId: SortOrder
  updatedDate: SortOrder
  user: UserOrderByWithRelationInput
}

input RoomParticipantRelationFilter {
  is: RoomParticipantWhereInput
  isNot: RoomParticipantWhereInput
}

enum RoomParticipantScalarFieldEnum {
  createdDate
  id
  isActive
  participantId
  roomId
  updatedDate
}

input RoomParticipantScalarWhereInput {
  AND: [RoomParticipantScalarWhereInput!]
  NOT: [RoomParticipantScalarWhereInput!]
  OR: [RoomParticipantScalarWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  participantId: IntFilter
  roomId: IntFilter
  updatedDate: AWSDateTimeNullableFilter
}

input RoomParticipantUpdateManyMutationInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input RoomParticipantUpdateManyWithWhereWithoutRoomInput {
  data: RoomParticipantUpdateManyMutationInput!
  where: RoomParticipantScalarWhereInput!
}

input RoomParticipantUpdateManyWithWhereWithoutUserInput {
  data: RoomParticipantUpdateManyMutationInput!
  where: RoomParticipantScalarWhereInput!
}

input RoomParticipantUpdateManyWithoutRoomInput {
  connect: [RoomParticipantWhereUniqueInput!]
  connectOrCreate: [RoomParticipantCreateOrConnectWithoutRoomInput!]
  create: [RoomParticipantCreateWithoutRoomInput!]
  createMany: RoomParticipantCreateManyRoomInputEnvelope
  delete: [RoomParticipantWhereUniqueInput!]
  deleteMany: [RoomParticipantScalarWhereInput!]
  disconnect: [RoomParticipantWhereUniqueInput!]
  set: [RoomParticipantWhereUniqueInput!]
  update: [RoomParticipantUpdateWithWhereUniqueWithoutRoomInput!]
  updateMany: [RoomParticipantUpdateManyWithWhereWithoutRoomInput!]
  upsert: [RoomParticipantUpsertWithWhereUniqueWithoutRoomInput!]
}

input RoomParticipantUpdateManyWithoutUserInput {
  connect: [RoomParticipantWhereUniqueInput!]
  connectOrCreate: [RoomParticipantCreateOrConnectWithoutUserInput!]
  create: [RoomParticipantCreateWithoutUserInput!]
  createMany: RoomParticipantCreateManyUserInputEnvelope
  delete: [RoomParticipantWhereUniqueInput!]
  deleteMany: [RoomParticipantScalarWhereInput!]
  disconnect: [RoomParticipantWhereUniqueInput!]
  set: [RoomParticipantWhereUniqueInput!]
  update: [RoomParticipantUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [RoomParticipantUpdateManyWithWhereWithoutUserInput!]
  upsert: [RoomParticipantUpsertWithWhereUniqueWithoutUserInput!]
}

input RoomParticipantUpdateOneRequiredWithoutMessageRecipientsInput {
  connect: RoomParticipantWhereUniqueInput
  connectOrCreate: RoomParticipantCreateOrConnectWithoutMessageRecipientsInput
  create: RoomParticipantCreateWithoutMessageRecipientsInput
  update: RoomParticipantUpdateWithoutMessageRecipientsInput
  upsert: RoomParticipantUpsertWithoutMessageRecipientsInput
}

input RoomParticipantUpdateWithWhereUniqueWithoutRoomInput {
  data: RoomParticipantUpdateWithoutRoomInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantUpdateWithWhereUniqueWithoutUserInput {
  data: RoomParticipantUpdateWithoutUserInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantUpdateWithoutMessageRecipientsInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  room: RoomUpdateOneRequiredWithoutRoomParticipantsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRoomParticipantsInput
}

input RoomParticipantUpdateWithoutRoomInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  messageRecipients: MessageRecipientUpdateManyWithoutRoomParticipantInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRoomParticipantsInput
}

input RoomParticipantUpdateWithoutUserInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  messageRecipients: MessageRecipientUpdateManyWithoutRoomParticipantInput
  room: RoomUpdateOneRequiredWithoutRoomParticipantsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input RoomParticipantUpsertWithWhereUniqueWithoutRoomInput {
  create: RoomParticipantCreateWithoutRoomInput!
  update: RoomParticipantUpdateWithoutRoomInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantUpsertWithWhereUniqueWithoutUserInput {
  create: RoomParticipantCreateWithoutUserInput!
  update: RoomParticipantUpdateWithoutUserInput!
  where: RoomParticipantWhereUniqueInput!
}

input RoomParticipantUpsertWithoutMessageRecipientsInput {
  create: RoomParticipantCreateWithoutMessageRecipientsInput!
  update: RoomParticipantUpdateWithoutMessageRecipientsInput!
}

input RoomParticipantWhereInput {
  AND: [RoomParticipantWhereInput!]
  NOT: [RoomParticipantWhereInput!]
  OR: [RoomParticipantWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  messageRecipients: MessageRecipientListRelationFilter
  participantId: IntFilter
  room: RoomRelationFilter
  roomId: IntFilter
  updatedDate: AWSDateTimeNullableFilter
  user: UserRelationFilter
}

input RoomParticipantWhereUniqueInput {
  id: Int
}

input RoomRelationFilter {
  is: RoomWhereInput
  isNot: RoomWhereInput
}

enum RoomScalarFieldEnum {
  createdDate
  id
  isActive
  lastActivityDate
  name
  type
  updatedDate
  userId
}

input RoomScalarWhereInput {
  AND: [RoomScalarWhereInput!]
  NOT: [RoomScalarWhereInput!]
  OR: [RoomScalarWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  lastActivityDate: AWSDateTimeNullableFilter
  name: StringNullableFilter
  type: EnumGroupTypeFilter
  updatedDate: AWSDateTimeNullableFilter
  userId: IntFilter
}

input RoomUpdateManyMutationInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  lastActivityDate: NullableAWSDateTimeFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  type: EnumGroupTypeFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input RoomUpdateManyWithWhereWithoutUserInput {
  data: RoomUpdateManyMutationInput!
  where: RoomScalarWhereInput!
}

input RoomUpdateManyWithoutUserInput {
  connect: [RoomWhereUniqueInput!]
  connectOrCreate: [RoomCreateOrConnectWithoutUserInput!]
  create: [RoomCreateWithoutUserInput!]
  createMany: RoomCreateManyUserInputEnvelope
  delete: [RoomWhereUniqueInput!]
  deleteMany: [RoomScalarWhereInput!]
  disconnect: [RoomWhereUniqueInput!]
  set: [RoomWhereUniqueInput!]
  update: [RoomUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [RoomUpdateManyWithWhereWithoutUserInput!]
  upsert: [RoomUpsertWithWhereUniqueWithoutUserInput!]
}

input RoomUpdateOneRequiredWithoutRoomParticipantsInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutRoomParticipantsInput
  create: RoomCreateWithoutRoomParticipantsInput
  update: RoomUpdateWithoutRoomParticipantsInput
  upsert: RoomUpsertWithoutRoomParticipantsInput
}

input RoomUpdateOneWithoutMessagesInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutMessagesInput
  create: RoomCreateWithoutMessagesInput
  delete: Boolean
  disconnect: Boolean
  update: RoomUpdateWithoutMessagesInput
  upsert: RoomUpsertWithoutMessagesInput
}

input RoomUpdateWithWhereUniqueWithoutUserInput {
  data: RoomUpdateWithoutUserInput!
  where: RoomWhereUniqueInput!
}

input RoomUpdateWithoutMessagesInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  lastActivityDate: NullableAWSDateTimeFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  roomParticipants: RoomParticipantUpdateManyWithoutRoomInput
  type: EnumGroupTypeFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRoomsInput
}

input RoomUpdateWithoutRoomParticipantsInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  lastActivityDate: NullableAWSDateTimeFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutRoomInput
  name: NullableStringFieldUpdateOperationsInput
  type: EnumGroupTypeFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRoomsInput
}

input RoomUpdateWithoutUserInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  lastActivityDate: NullableAWSDateTimeFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutRoomInput
  name: NullableStringFieldUpdateOperationsInput
  roomParticipants: RoomParticipantUpdateManyWithoutRoomInput
  type: EnumGroupTypeFieldUpdateOperationsInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
}

input RoomUpsertWithWhereUniqueWithoutUserInput {
  create: RoomCreateWithoutUserInput!
  update: RoomUpdateWithoutUserInput!
  where: RoomWhereUniqueInput!
}

input RoomUpsertWithoutMessagesInput {
  create: RoomCreateWithoutMessagesInput!
  update: RoomUpdateWithoutMessagesInput!
}

input RoomUpsertWithoutRoomParticipantsInput {
  create: RoomCreateWithoutRoomParticipantsInput!
  update: RoomUpdateWithoutRoomParticipantsInput!
}

input RoomWhereInput {
  AND: [RoomWhereInput!]
  NOT: [RoomWhereInput!]
  OR: [RoomWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  id: IntFilter
  isActive: BoolNullableFilter
  lastActivityDate: AWSDateTimeNullableFilter
  messages: MessageListRelationFilter
  name: StringNullableFilter
  roomParticipants: RoomParticipantListRelationFilter
  type: EnumGroupTypeFilter
  updatedDate: AWSDateTimeNullableFilter
  user: UserRelationFilter
  userId: IntFilter
}

input RoomWhereUniqueInput {
  id: Int
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  _count: UserCount
  createdDate: AWSDateTime
  deviceToken: String
  domain: Domain!
  domainId: Int!
  email: String
  externalUserId: String!
  firstName: String
  id: Int!
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  messages(
    cursor: MessageWhereUniqueInput
    distinct: [MessageScalarFieldEnum!]
    orderBy: [MessageOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: MessageWhereInput
  ): [Message!]!
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  roomParticipants(
    cursor: RoomParticipantWhereUniqueInput
    distinct: [RoomParticipantScalarFieldEnum!]
    orderBy: [RoomParticipantOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: RoomParticipantWhereInput
  ): [RoomParticipant!]!
  rooms(
    cursor: RoomWhereUniqueInput
    distinct: [RoomScalarFieldEnum!]
    orderBy: [RoomOrderByWithRelationInput!]
    skip: Int
    take: Int
    where: RoomWhereInput
  ): [Room!]!
  updatedDate: AWSDateTime
  uuid: String
}

type UserCount {
  messages: Int!
  roomParticipants: Int!
  rooms: Int!
}

input UserCreateInput {
  createdDate: AWSDateTime
  deviceToken: String
  domain: DomainCreateNestedOneWithoutUsersInput!
  email: String
  externalUserId: String!
  firstName: String
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  messages: MessageCreateNestedManyWithoutUserInput
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  roomParticipants: RoomParticipantCreateNestedManyWithoutUserInput
  rooms: RoomCreateNestedManyWithoutUserInput
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateManyDomainInput {
  createdDate: AWSDateTime
  deviceToken: String
  email: String
  externalUserId: String!
  firstName: String
  id: Int
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateManyDomainInputEnvelope {
  data: [UserCreateManyDomainInput!]!
  skipDuplicates: Boolean
}

input UserCreateManyInput {
  createdDate: AWSDateTime
  deviceToken: String
  domainId: Int!
  email: String
  externalUserId: String!
  firstName: String
  id: Int
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateNestedManyWithoutDomainInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutDomainInput!]
  create: [UserCreateWithoutDomainInput!]
  createMany: UserCreateManyDomainInputEnvelope
}

input UserCreateNestedOneWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
}

input UserCreateNestedOneWithoutRoomParticipantsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRoomParticipantsInput
  create: UserCreateWithoutRoomParticipantsInput
}

input UserCreateNestedOneWithoutRoomsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRoomsInput
  create: UserCreateWithoutRoomsInput
}

input UserCreateOrConnectWithoutDomainInput {
  create: UserCreateWithoutDomainInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRoomParticipantsInput {
  create: UserCreateWithoutRoomParticipantsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRoomsInput {
  create: UserCreateWithoutRoomsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutDomainInput {
  createdDate: AWSDateTime
  deviceToken: String
  email: String
  externalUserId: String!
  firstName: String
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  messages: MessageCreateNestedManyWithoutUserInput
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  roomParticipants: RoomParticipantCreateNestedManyWithoutUserInput
  rooms: RoomCreateNestedManyWithoutUserInput
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateWithoutMessagesInput {
  createdDate: AWSDateTime
  deviceToken: String
  domain: DomainCreateNestedOneWithoutUsersInput!
  email: String
  externalUserId: String!
  firstName: String
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  roomParticipants: RoomParticipantCreateNestedManyWithoutUserInput
  rooms: RoomCreateNestedManyWithoutUserInput
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateWithoutRoomParticipantsInput {
  createdDate: AWSDateTime
  deviceToken: String
  domain: DomainCreateNestedOneWithoutUsersInput!
  email: String
  externalUserId: String!
  firstName: String
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  messages: MessageCreateNestedManyWithoutUserInput
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  rooms: RoomCreateNestedManyWithoutUserInput
  updatedDate: AWSDateTime
  uuid: String
}

input UserCreateWithoutRoomsInput {
  createdDate: AWSDateTime
  deviceToken: String
  domain: DomainCreateNestedOneWithoutUsersInput!
  email: String
  externalUserId: String!
  firstName: String
  imageUrl: String
  isActive: Boolean
  isPushEnabled: Boolean
  lastName: String
  messages: MessageCreateNestedManyWithoutUserInput
  onlineStatus: UserOnlineStatus
  preferences: AWSJSON
  roomParticipants: RoomParticipantCreateNestedManyWithoutUserInput
  updatedDate: AWSDateTime
  uuid: String
}

input UserExternalUserIdDomainIdCompoundUniqueInput {
  domainId: Int!
  externalUserId: String!
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

enum UserOnlineStatus {
  Available
  Away
  Offline
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithRelationInput {
  createdDate: SortOrder
  deviceToken: SortOrder
  domain: DomainOrderByWithRelationInput
  domainId: SortOrder
  email: SortOrder
  externalUserId: SortOrder
  firstName: SortOrder
  id: SortOrder
  imageUrl: SortOrder
  isActive: SortOrder
  isPushEnabled: SortOrder
  lastName: SortOrder
  messages: MessageOrderByRelationAggregateInput
  onlineStatus: SortOrder
  preferences: SortOrder
  roomParticipants: RoomParticipantOrderByRelationAggregateInput
  rooms: RoomOrderByRelationAggregateInput
  updatedDate: SortOrder
  uuid: SortOrder
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldEnum {
  createdDate
  deviceToken
  domainId
  email
  externalUserId
  firstName
  id
  imageUrl
  isActive
  isPushEnabled
  lastName
  onlineStatus
  preferences
  updatedDate
  uuid
}

input UserUpdateInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  deviceToken: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneRequiredWithoutUsersInput
  email: NullableStringFieldUpdateOperationsInput
  externalUserId: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  imageUrl: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPushEnabled: NullableBoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutUserInput
  onlineStatus: NullableEnumUserOnlineStatusFieldUpdateOperationsInput
  preferences: AWSJSON
  roomParticipants: RoomParticipantUpdateManyWithoutUserInput
  rooms: RoomUpdateManyWithoutUserInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  uuid: NullableStringFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutRoomParticipantsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRoomParticipantsInput
  create: UserCreateWithoutRoomParticipantsInput
  update: UserUpdateWithoutRoomParticipantsInput
  upsert: UserUpsertWithoutRoomParticipantsInput
}

input UserUpdateOneRequiredWithoutRoomsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRoomsInput
  create: UserCreateWithoutRoomsInput
  update: UserUpdateWithoutRoomsInput
  upsert: UserUpsertWithoutRoomsInput
}

input UserUpdateOneWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutMessagesInput
  upsert: UserUpsertWithoutMessagesInput
}

input UserUpdateWithoutMessagesInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  deviceToken: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneRequiredWithoutUsersInput
  email: NullableStringFieldUpdateOperationsInput
  externalUserId: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  imageUrl: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPushEnabled: NullableBoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  onlineStatus: NullableEnumUserOnlineStatusFieldUpdateOperationsInput
  preferences: AWSJSON
  roomParticipants: RoomParticipantUpdateManyWithoutUserInput
  rooms: RoomUpdateManyWithoutUserInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  uuid: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutRoomParticipantsInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  deviceToken: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneRequiredWithoutUsersInput
  email: NullableStringFieldUpdateOperationsInput
  externalUserId: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  imageUrl: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPushEnabled: NullableBoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutUserInput
  onlineStatus: NullableEnumUserOnlineStatusFieldUpdateOperationsInput
  preferences: AWSJSON
  rooms: RoomUpdateManyWithoutUserInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  uuid: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutRoomsInput {
  createdDate: NullableAWSDateTimeFieldUpdateOperationsInput
  deviceToken: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneRequiredWithoutUsersInput
  email: NullableStringFieldUpdateOperationsInput
  externalUserId: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  imageUrl: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPushEnabled: NullableBoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutUserInput
  onlineStatus: NullableEnumUserOnlineStatusFieldUpdateOperationsInput
  preferences: AWSJSON
  roomParticipants: RoomParticipantUpdateManyWithoutUserInput
  updatedDate: NullableAWSDateTimeFieldUpdateOperationsInput
  uuid: NullableStringFieldUpdateOperationsInput
}

input UserUpsertWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  update: UserUpdateWithoutMessagesInput!
}

input UserUpsertWithoutRoomParticipantsInput {
  create: UserCreateWithoutRoomParticipantsInput!
  update: UserUpdateWithoutRoomParticipantsInput!
}

input UserUpsertWithoutRoomsInput {
  create: UserCreateWithoutRoomsInput!
  update: UserUpdateWithoutRoomsInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdDate: AWSDateTimeNullableFilter
  deviceToken: StringNullableFilter
  domain: DomainRelationFilter
  domainId: IntFilter
  email: StringNullableFilter
  externalUserId: StringFilter
  firstName: StringNullableFilter
  id: IntFilter
  imageUrl: StringNullableFilter
  isActive: BoolNullableFilter
  isPushEnabled: BoolNullableFilter
  lastName: StringNullableFilter
  messages: MessageListRelationFilter
  onlineStatus: EnumUserOnlineStatusNullableFilter
  preferences: JsonNullableFilter
  roomParticipants: RoomParticipantListRelationFilter
  rooms: RoomListRelationFilter
  updatedDate: AWSDateTimeNullableFilter
  uuid: StringNullableFilter
}

input UserWhereUniqueInput {
  externalUserId_domainId: UserExternalUserIdDomainIdCompoundUniqueInput
  id: Int
}
type Subscription {
  onMessageTyping(roomId: Int!): MessageTyping
    @aws_subscribe(mutations: ["messageTyping"])
}
